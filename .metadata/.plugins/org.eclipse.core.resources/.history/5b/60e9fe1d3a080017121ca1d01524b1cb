/*
 * hash.h
 *
 *  Created on: Mar 13, 2017
 *      Author: shreeganesh
 */

#ifndef HASH_H_
#define HASH_H_

#include<iostream>
#include<string>
#include<cstdlib>

using namespace std;

struct item
{
	string name;
	int contect;
	item * next;
};

class HashTable
{
private:
	static const int TableSize = 10;
	item * Table[TableSize];
public:
	HashTable();
	int HashFunction(string key);
	void AddItems(string name, int contacts);
};

int HashTable::HashFunction(string name)
{
	int hashNumber = 0;

	for(unsigned i=0; i< name.length(); i++)
	{
		hashNumber += (int) name[i];
	}

	return hashNumber % TableSize;
}

HashTable::HashTable()
{
	for(int i=0; i<TableSize ; i++)
	{
		Table[i] = new item();
		Table[i]->name = "empty";
		Table[i]->contect = 0;
		Table[i]->next = NULL;
	}
}

void HashTable::AddItems(int key)
{
	item * n = new item();
	n->contect
}

#endif /* HASH_H_ */
